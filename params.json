{
  "name": "Baby-steps-tests",
  "tagline": "",
  "body": "#Baby Steps Tests\r\n\r\nesse artigo irá te guiar dentro do mundo de teste unitário no NodeJS\r\n\r\n\r\n##Setup Ambiente\r\n\r\npara acompanhar os códigos desse projeto é preciso ter o NodeJS na em seu ambiente de trabalho, nesse [link](https://nodejs.org/en/download/current/)\r\nvocê pode fazer o download de acordo com o seu sistema operacional.\r\n\r\nEsse projeto irá utilizar o test runner [mocha](https://mochajs.org/) e a biblioteca de asserções [chai](http://chaijs.com/)*\r\n \r\n *acesse o site de cada um para maiores informações\r\n \r\n##Iniciando o projeto\r\n\r\nTodas as dependencias necessárias para rodar um projeto node deve ser colocado no package.json\r\nele pode ser criado por meio do comando ``npm init``. Esse comando irá criar um arquivo de nome\r\npackage.json com todas as informações do seu projeto.\r\n\r\n    name: (baby-steps-test)\r\n    version: (1.0.0)\r\n    description: just a project to show some baby steps on test in NodeJS\r\n    entry point: (Calc.js)\r\n    test command: mocha -w\r\n    git repository: https://github.com/yesroh/baby-steps-tests.git\r\n    keywords: TESTS, NODE, JS\r\n    author: Ronaiza Cardoso <ronaizacard@gmail.com>\r\n    license: (ISC) MIT\r\n    \r\nem  ``scripts`` podemos colocar atalhos que podemos usar para agilizar o nosso desempenho\r\nalí coloquei o ``mocha `` com o parâmetro ``-w`` para que o mocha fique vendo o nosso arquivo enquanto\r\nfazemos o teste. Para utilizar o mocha por meio do cli(command line interface) você precisa instalar\r\nele globalmente por meio do comando ``npm install mocha -g``\r\n\r\n##Primeiro teste\r\n\r\nVamos testar uma classe calculadora, segue abaixo a classe\r\n\r\n<script src=\"https://gist.github.com/yesroh/57eb3268e54efeabf6daf4fe22b6bd69.js\"></script>\r\n\r\nagora dentro da pasta test vamos criar os nossos testes, o nome desse teste será calc.spec.js, é \r\numa boa prática utilizar como nome dos nossos testes o nome da classe que será testada e o .spec. \r\nassim o mocha saberá que aquele arquivo se trata de um teste.\r\n\r\nNo arquivo abaixo estamos importando a classe calc e as a lib do chai, para que assim possamos\r\nutilizar o a dot notation em nosso teste.\r\n\r\nna linha 7 colocamos o nome do aquivo que iremos testar, no it o que esse teste deverá fazer\r\n\r\n<script src=\"https://gist.github.com/yesroh/0c312669526512c5c95ba969f975bcb4.js\"></script>\r\n\r\naqui você poderá conferir os demais testes da nossa classe.\r\n\r\n<script src=\"https://gist.github.com/yesroh/62e602adf5fefc8d693390346b351915.js\"></script>",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}